#!/bin/bash
#
# cert-functions

certs() {
  local filters=$(__bma_read_filters $@)

  [[ -n ${include_arn:-} ]] && local include_arn_bit="CertificateArn,"
  local cert_arns=$(aws acm list-certificates --output text | cut -f2)
  local cert_arn
  for cert_arn in $cert_arns; do
    aws acm describe-certificate \
      --certificate-arn "$cert_arn" \
      --query "Certificate.[
        $include_arn_bit
        DomainName,
        Status,
        length(InUseBy)==\`0\` && 'not-in-use' || 'in-use',
        NotBefore,
        NotAfter,
        join(', ', [DomainValidationOptions[].ValidationMethod][])
      ]" \
      --output text
  done |
  grep -E -- "$filters" |
  sort -b -k 5 | # sort by NotAfter
  column -t
}


# Same as certs() but with the ARN in first column
certs-arn() {
  local include_arn=true
  certs $@
}


cert-users() {
  local cert_arns="$(__bma_read_inputs $@)"
  [[ -z "$cert_arns" ]] && __bma_usage "cert-arn [cert-arn]" && return 1

  local cert_arns
  for cert_arn in $cert_arns; do
    aws acm describe-certificate    \
      --certificate-arn ${cert_arn} \
      --query "Certificate.InUseBy[].[
        @, \`$cert_arn\`
      ]
      " \
      --output text
  done |
  column -s$'\t' -t
}


cert-delete() {
  local cert_arns="$(__bma_read_inputs $@)"
  [[ -z "$cert_arns" ]] && __bma_usage "cert-arn [cert-arn]" && return 1

  echo "You are about to delete the following certificates:"
  echo "$cert_arns" | tr " " "\n"
  [ -t 0 ] || exec </dev/tty # reattach keyboard to STDIN
  local regex_yes="^[Yy]$"
  read -p "Are you sure you want to continue? " -n 1 -r
  echo
  if [[ $REPLY =~ $regex_yes ]]
  then
    local cert_arn
    for cert_arn in $cert_arns; do
      aws acm delete-certificate --certificate-arn $cert_arn
    done
  fi
}
